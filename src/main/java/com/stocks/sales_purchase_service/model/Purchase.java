package com.stocks.sales_purchase_service.model;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import com.stocks.product_service.model.Product;
import com.stocks.product_service.model.Supplier;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.ParameterMode;
import jakarta.persistence.NamedStoredProcedureQuery;
import jakarta.persistence.StoredProcedureParameter;
import jakarta.persistence.Table;

/**
 * Entity class representing a purchase in the stock management system.
 */


@NamedStoredProcedureQuery(
	    name = "create_purchase",
	    procedureName = "create_purchase",
	    parameters = {
	        @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_seller_id", type = Integer.class),
	        @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_product_id", type = Integer.class),
	        @StoredProcedureParameter(mode = ParameterMode.IN, name = "p_quantity", type = Integer.class)
	    }
	)

@Entity
@Table(name = "Purchases")
public class Purchase {

    /**
     * The unique identifier for each purchase. 
     * This is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "purchase_id")
    private Integer purchaseId;

    /**
     * The product associated with the purchase.
     * This establishes a many-to-one relationship with the Product entity.
     */
    @ManyToOne
    @JoinColumn(name = "product_id", nullable = false)
    private Product product;

    /**
     * The supplier associated with the purchase.
     * This establishes a many-to-one relationship with the Supplier entity.
     */
    @ManyToOne
    @JoinColumn(name = "supplier_id", nullable = false)
    private Supplier supplier;

    /**
     * The quantity of the product purchased.
     */
    @Column(name = "quantity", nullable = false)
    private Integer quantity;

    /**
     * The unit price of the product.
     * Stored as a BigDecimal for precise financial calculations.
     */
    @Column(name = "unit_price", nullable = false)
    private BigDecimal unitPrice;

    /**
     * The Central Goods and Services Tax (CGST) applied to the purchase.
     */
    @Column(name = "cgst", nullable = false)
    private BigDecimal cgst;

    /**
     * The State Goods and Services Tax (SGST) applied to the purchase.
     */
    @Column(name = "sgst", nullable = false)
    private BigDecimal sgst;

    /**
     * The Integrated Goods and Services Tax (IGST) applied to the purchase.
     */
    @Column(name = "igst", nullable = false)
    private BigDecimal igst;

    /**
     * The net amount for the purchase.
     */
    @Column(name = "net_amount", nullable = false)
    private BigDecimal netAmount;

    /**
     * The gross amount for the purchase, including all taxes.
     */
    @Column(name = "gross_amount", nullable = false)
    private BigDecimal grossAmount;

    /**
     * The date and time when the purchase was made.
     */
    @Column(name = "purchase_date", nullable = false)
    private LocalDateTime purchaseDate;

    // Getters and Setters

    /**
     * Gets the unique identifier for the purchase.
     * 
     * @return the purchase ID.
     */
    public Integer getPurchaseId() {
        return purchaseId;
    }

    /**
     * Sets the unique identifier for the purchase.
     * 
     * @param purchaseId the purchase ID to set.
     */
    public void setPurchaseId(Integer purchaseId) {
        this.purchaseId = purchaseId;
    }

    /**
     * Gets the product associated with the purchase.
     * 
     * @return the product.
     */
    public Product getProduct() {
        return product;
    }

    /**
     * Sets the product associated with the purchase.
     * 
     * @param product the product to set.
     */
    public void setProduct(Product product) {
        this.product = product;
    }

    /**
     * Gets the supplier associated with the purchase.
     * 
     * @return the supplier.
     */
    public Supplier getSupplier() {
        return supplier;
    }

    /**
     * Sets the supplier associated with the purchase.
     * 
     * @param supplier the supplier to set.
     */
    public void setSupplier(Supplier supplier) {
        this.supplier = supplier;
    }

    /**
     * Gets the quantity of the product purchased.
     * 
     * @return the quantity.
     */
    public Integer getQuantity() {
        return quantity;
    }

    /**
     * Sets the quantity of the product purchased.
     * 
     * @param quantity the quantity to set.
     */
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    /**
     * Gets the unit price of the product.
     * 
     * @return the unit price.
     */
    public BigDecimal getUnitPrice() {
        return unitPrice;
    }

    /**
     * Sets the unit price of the product.
     * 
     * @param unitPrice the unit price to set.
     */
    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    /**
     * Gets the Central Goods and Services Tax (CGST) applied to the purchase.
     * 
     * @return the CGST.
     */
    public BigDecimal getCgst() {
        return cgst;
    }

    /**
     * Sets the Central Goods and Services Tax (CGST) applied to the purchase.
     * 
     * @param cgst the CGST to set.
     */
    public void setCgst(BigDecimal cgst) {
        this.cgst = cgst;
    }

    /**
     * Gets the State Goods and Services Tax (SGST) applied to the purchase.
     * 
     * @return the SGST.
     */
    public BigDecimal getSgst() {
        return sgst;
    }

    /**
     * Sets the State Goods and Services Tax (SGST) applied to the purchase.
     * 
     * @param sgst the SGST to set.
     */
    public void setSgst(BigDecimal sgst) {
        this.sgst = sgst;
    }

    /**
     * Gets the Integrated Goods and Services Tax (IGST) applied to the purchase.
     * 
     * @return the IGST.
     */
    public BigDecimal getIgst() {
        return igst;
    }

    /**
     * Sets the Integrated Goods and Services Tax (IGST) applied to the purchase.
     * 
     * @param igst the IGST to set.
     */
    public void setIgst(BigDecimal igst) {
        this.igst = igst;
    }

    /**
     * Gets the net amount for the purchase.
     * 
     * @return the net amount.
     */
    public BigDecimal getNetAmount() {
        return netAmount;
    }

    /**
     * Sets the net amount for the purchase.
     * 
     * @param netAmount the net amount to set.
     */
    public void setNetAmount(BigDecimal netAmount) {
        this.netAmount = netAmount;
    }

    /**
     * Gets the gross amount for the purchase, including all taxes.
     * 
     * @return the gross amount.
     */
    public BigDecimal getGrossAmount() {
        return grossAmount;
    }

    /**
     * Sets the gross amount for the purchase, including all taxes.
     * 
     * @param grossAmount the gross amount to set.
     */
    public void setGrossAmount(BigDecimal grossAmount) {
        this.grossAmount = grossAmount;
    }

    /**
     * Gets the date and time when the purchase was made.
     * 
     * @return the purchase date.
     */
    public LocalDateTime getPurchaseDate() {
        return purchaseDate;
    }

    /**
     * Sets the date and time when the purchase was made.
     * 
     * @param purchaseDate the purchase date to set.
     */
    public void setPurchaseDate(LocalDateTime purchaseDate) {
        this.purchaseDate = purchaseDate;
    }
}
